version: "3"

services:

  mysql:
    image: mysql:5.7
    container_name: mysql
    env_file:
      - db.env
    restart: unless-stopped
    volumes:
      - mysqlVol:/var/lib/mysql
      - ./db/initdb/initDatabase.sql:/docker-entrypoint-initdb.d/initDatabase.sql
    ports:
      - "3306"
    networks:
      - dbNet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
    depends_on:
      - mysql
    restart: unless-stopped
    ports:
      - "80"
    networks:
      - dbNet
      - serverNet

  nodeserver:
    build: ./server
    container_name: nodeserver
    env_file:
      - serverClient.env
      - db.env
    command: npm start
    depends_on:
      - mysql
    restart: unless-stopped
    volumes:
      - ./server:/app
    ports:
      - "3001"
    networks:
      - serverNet
      - dbNet

  
  reactclient:
    build: ./client
    env_file:
      - serverClient.env
    command: npm start
    depends_on:
      - nodeserver
    restart: unless-stopped
    volumes:
      - ./client/src:/app/src
    ports:
      - "3003"
    networks:
      - serverNet
    deploy:
      mode: replicated
      replicas: 3
      resources:
        reservations:
          cpus: '0.25'
          memory: 20M
        

  reverseProxyNginx:
    image: nginx:1.17
    container_name: reverseProxyNginx
    restart: unless-stopped
    depends_on:
      - reactclient
      - nodeserver
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8001:80"
    networks:
      - serverNet

volumes:
  mysqlVol:
    name: mysqlVol

networks:
  dbNet:
    name: dbNet
    driver: bridge
  serverNet:
    name: serverNet
    driver: bridge